<?php
// Start session at the beginning
ob_start();

if (session_status() === PHP_SESSION_NONE) {
    @session_start();
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ remember me cookie
function checkRememberMe() {
    // Check if user is logged in via cookies but not in session
    if (!isset($_SESSION['user_id']) && isset($_COOKIE['user_id']) && !empty($_COOKIE['user_id'])) {
        // Restore session from cookies
        $_SESSION['user_id'] = $_COOKIE['user_id'];
        $_SESSION['name'] = $_COOKIE['name'] ?? '';
        $_SESSION['email'] = $_COOKIE['email'] ?? '';
        $_SESSION['logged_in'] = true;
        
        // TODO: ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á‡∏Ñ‡∏ß‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö token ‡∏Å‡∏±‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        // ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
    }
}

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ remember me
checkRememberMe();

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô - ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ó‡∏±‡πâ‡∏á session ‡πÅ‡∏•‡∏∞ cookie
$isLoggedIn = (isset($_SESSION['user_id']) && !empty($_SESSION['user_id'])) || 
              (isset($_COOKIE['user_id']) && !empty($_COOKIE['user_id']));

// ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å session ‡∏´‡∏£‡∏∑‡∏≠ cookie
$userName = '';
if ($isLoggedIn) {
    $userName = $_SESSION['name'] ?? $_COOKIE['name'] ?? '';
}
?>

<div class="header">
    <div class="logo">
        <img src="image/logo.png" width="100px">
    </div>
    <div class="header-nav">
        <a href="home.php">‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</a>
        <a href="allproduct.php">‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</a>
        <a href="aboutme.php">‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤</a>
        <a href="contactus.php">‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤</a>
    </div>

    <div class="header-icons">
        <!-- Cart Icon -->
        <div class="icon" id="cartIcon">
            üõí
            <div class="cart-badge" id="cartBadge">3</div>
        </div>

        <!-- Notification Icon - ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß -->
        <?php if ($isLoggedIn): ?>
        <div class="icon dropdown" id="notificationIcon">
            üîî
            <div class="dropdown-content" id="notificationDropdown">
                <a href="bill.php">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</a>
                <a href="notifications.php">‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</a>
                <a href="promotions.php">‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô</a>
            </div>
        </div>
        <?php endif; ?>

        <!-- Profile Icon -->
        <div class="icon dropdown" id="profileIcon">
            üë§
            <div class="dropdown-content" id="profileDropdown">
                <?php if ($isLoggedIn): ?>
                <!-- ‡πÄ‡∏°‡∏ô‡∏π‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß -->
                <div class="user-info">
                    <span>‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ, <?php echo htmlspecialchars($userName); ?>!</span>
                </div>
                <a href="profile.php">‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå</a>
                <a href="myorders.php">‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô</a>
                <a href="wishlist.php">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡∏î</a>
                <a href="settings.php">‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤</a>
                <hr class="dropdown-divider">
                <a href="logout.php">‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö</a>
                <?php else: ?>
                <!-- ‡πÄ‡∏°‡∏ô‡∏π‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô -->
                <a href="register.php">‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô</a>
                <a href="login.php">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</a>
                <hr class="dropdown-divider">
                <?php endif; ?>
            </div>
        </div>
    </div>
</div>

<script>
// ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å PHP ‡πÑ‡∏õ‡∏¢‡∏±‡∏á JavaScript
window.phpIsLoggedIn = <?php echo $isLoggedIn ? 'true' : 'false'; ?>;
window.phpUserName = '<?php echo $isLoggedIn ? addslashes($userName) : ''; ?>';

// Debug log ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
console.log('PHP Data loaded:');
console.log('- Login Status:', window.phpIsLoggedIn);
console.log('- User Name:', window.phpUserName);
console.log('- Session user_id:', '<?php echo $_SESSION['user_id'] ?? 'not set'; ?>');
console.log('- Cookie user_id:', '<?php echo $_COOKIE['user_id'] ?? 'not set'; ?>');
</script>

<script>
// Header Script - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô 0 ‡∏´‡∏•‡∏±‡∏á‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä
document.addEventListener('DOMContentLoaded', function() {
    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏≤‡∏Å localStorage
    function loadCartCountFromStorage() {
        try {
            const saved = localStorage.getItem('shopping_cart');
            if (saved) {
                const cartData = JSON.parse(saved);
                return Object.values(cartData).reduce((total, item) => total + item.quantity, 0);
            }
        } catch (error) {
            console.error('Error loading cart count:', error);
        }
        return 0;
    }

    // Global variables
    let cartCount = loadCartCountFromStorage(); // ‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å localStorage ‡πÅ‡∏ó‡∏ô hardcode
    
    const cartIcon = document.getElementById('cartIcon');
    const cartBadge = document.getElementById('cartBadge');
    const notificationIcon = document.getElementById('notificationIcon');
    const notificationDropdown = document.getElementById('notificationDropdown');
    const profileIcon = document.getElementById('profileIcon');
    const profileDropdown = document.getElementById('profileDropdown');

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏à‡∏≤‡∏Å PHP
    const isLoggedIn = typeof window.phpIsLoggedIn !== 'undefined' ? window.phpIsLoggedIn : false;
    const userName = typeof window.phpUserName !== 'undefined' ? window.phpUserName : '';

    // Debug log ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
    console.log('Cart Count from localStorage:', cartCount);
    console.log('Login Status:', isLoggedIn);
    console.log('User Name:', userName);

    // Utility function to show toast notifications
    function showToast(message, type = 'success') {
        const toast = document.createElement('div');
        const bgColor = type === 'success' ? 'linear-gradient(135deg, #4caf50, #45a049)' :
            type === 'warning' ? 'linear-gradient(135deg, #ff9800, #f57c00)' :
            type === 'info' ? 'linear-gradient(135deg, #2196f3, #1976d2)' :
            'linear-gradient(135deg, #f44336, #d32f2f)';

        toast.className = 'toast';
        toast.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: ${bgColor};
            color: white;
            padding: 15px 20px;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
            z-index: 10000;
            animation: slideInRight 0.5s ease;
            max-width: 300px;
            font-size: 14px;
        `;
        toast.textContent = message;

        // ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS animation
        if (!document.querySelector('#toast-styles')) {
            const style = document.createElement('style');
            style.id = 'toast-styles';
            style.textContent = `
                @keyframes slideInRight {
                    from { transform: translateX(100%); opacity: 0; }
                    to { transform: translateX(0); opacity: 1; }
                }
            `;
            document.head.appendChild(style);
        }

        document.body.appendChild(toast);

        setTimeout(() => {
            toast.style.animation = 'slideInRight 0.5s ease reverse';
            setTimeout(() => toast.remove(), 500);
        }, 3000);
    }

    // Cart functionality
    if (cartIcon) {
        cartIcon.addEventListener('click', function(e) {
            e.preventDefault();
            this.style.animation = 'shake 0.5s';
            setTimeout(() => { this.style.animation = ''; }, 500);

            if (isLoggedIn) {
                // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó cartCount ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏™‡∏î‡∏á toast
                cartCount = loadCartCountFromStorage();
                showToast(`üõí ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ${cartCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
                window.location.href = 'cart.php';
            } else {
                showToast('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏î‡∏π‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', 'warning');
                setTimeout(() => { window.location.href = 'login.php'; }, 1500);
            }
        });
    }

    // Update cart badge function - ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÉ‡∏´‡πâ‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å localStorage
    function updateCartBadge() {
        // ‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏à‡∏≤‡∏Å localStorage
        const currentCartCount = loadCartCountFromStorage();
        cartCount = currentCartCount;

        if (cartBadge) {
            cartBadge.textContent = cartCount;
            cartBadge.style.display = cartCount > 0 ? 'flex' : 'none';
        }

        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó global variable ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
        if (typeof window.cartCount !== 'undefined') {
            window.cartCount = cartCount;
        }

        console.log('Updated cart badge:', cartCount);
    }

    // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ function ‡πÄ‡∏õ‡πá‡∏ô global
    window.updateCartBadge = updateCartBadge;
    window.showToast = showToast;

    // Notification dropdown (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß)
    if (notificationIcon && notificationDropdown) {
        notificationIcon.addEventListener('click', function(e) {
            e.stopPropagation();
            notificationDropdown.classList.toggle('show');
            if (profileDropdown) {
                profileDropdown.classList.remove('show');
            }

            this.style.animation = 'shake 0.5s';
            setTimeout(() => {
                this.style.animation = '';
            }, 500);
        });
    }

    // Profile dropdown
    if (profileIcon && profileDropdown) {
        profileIcon.addEventListener('click', function(e) {
            e.stopPropagation();
            profileDropdown.classList.toggle('show');
            if (notificationDropdown) {
                notificationDropdown.classList.remove('show');
            }
        });
    }

    // Close dropdowns when clicking outside
    document.addEventListener('click', function(e) {
        if (notificationIcon && notificationDropdown && !notificationIcon.contains(e.target)) {
            notificationDropdown.classList.remove('show');
        }
        if (profileIcon && profileDropdown && !profileIcon.contains(e.target)) {
            profileDropdown.classList.remove('show');
        }
    });

    // Handle logout - ‡πÉ‡∏ä‡πâ AJAX ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£ submit form
    window.handleLogout = function() {
        if (confirm('‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
            // ‡πÅ‡∏™‡∏î‡∏á loading toast
            showToast('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö...', 'info');

            // ‡∏™‡πà‡∏á AJAX request ‡πÑ‡∏õ‡∏¢‡∏±‡∏á logout.php
            fetch('logout.php', {
                    method: 'POST'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
                        localStorage.removeItem('shopping_cart');
                        window.location.href = data.redirect;
                    }
                })
                .catch(error => {
                    console.error('Logout error:', error);
                    window.location.href = 'login.php';
                });
        }
    };

    // Handle dropdown menu actions
    document.querySelectorAll('.dropdown-content a').forEach(item => {
        item.addEventListener('click', function(e) {
            const href = this.getAttribute('href');

            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô onclick function
            if (this.getAttribute('onclick')) {
                return; // ‡πÉ‡∏´‡πâ onclick ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
            }

            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÑ‡∏ü‡∏•‡πå PHP ‡∏´‡∏£‡∏∑‡∏≠ HTML
            if (href && !href.startsWith('#') && (href.includes('.php') || href.includes('.html'))) {
                // ‡πÅ‡∏™‡∏î‡∏á loading toast
                const linkText = this.textContent.trim();
                showToast(`‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà ${linkText}...`, 'info');
                return true; // ‡πÉ‡∏´‡πâ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥
            }

            // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á toast
            e.preventDefault();
            const linkText = this.textContent.trim();
            showToast(`‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤: ${linkText}`, 'info');

            // Close dropdowns
            if (notificationDropdown) {
                notificationDropdown.classList.remove('show');
            }
            if (profileDropdown) {
                profileDropdown.classList.remove('show');
            }
        });
    });

    // Add hover effects to icons
    document.querySelectorAll('.icon').forEach(icon => {
        icon.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-3px) scale(1.05)';
        });

        icon.addEventListener('mouseleave', function() {
            this.style.transform = '';
        });
    });

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß)
    function checkNotifications() {
        if (isLoggedIn && notificationIcon) {
            if (Math.random() < 0.3) {
                if (!notificationIcon.querySelector('.notification-dot')) {
                    const dot = document.createElement('div');
                    dot.className = 'notification-dot';
                    notificationIcon.appendChild(dot);
                }
            }
        }
    }

    // Listen for cart updates from cartManager
    window.addEventListener('cartUpdated', function(e) {
        const { totalItems } = e.detail;
        cartCount = totalItems;
        updateCartBadge();
        console.log('Cart updated via event:', totalItems);
    });

    // Listen for localStorage changes (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö multiple tabs)
    window.addEventListener('storage', function(e) {
        if (e.key === 'shopping_cart') {
            console.log('localStorage changed, updating cart badge...');
            updateCartBadge();
        }
    });

    // Initialize
    updateCartBadge();
    checkNotifications();

    // Welcome message ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
    if (isLoggedIn && userName) {
        setTimeout(() => {
            showToast(`‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö ${userName}!`);
        }, 1000);
    } else {
        setTimeout(() => {
            showToast('‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö', 'info');
        }, 2000);
    }

    // ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö shake animation
    if (!document.querySelector('#header-animations')) {
        const style = document.createElement('style');
        style.id = 'header-animations';
        style.textContent = `
            @keyframes shake {
                0%, 100% { transform: translateX(0); }
                25% { transform: translateX(-5px) rotate(-5deg); }
                75% { transform: translateX(5px) rotate(5deg); }
            }
        `;
        document.head.appendChild(style);
    }

    console.log('Header script initialized with cart count:', cartCount);
});
</script>